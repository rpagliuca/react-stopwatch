{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["RESTART","INCREMENT","TOGGLE","TYPE_FOCUS_RIGHT","TYPE_FOCUS_LEFT","TYPE_ADD_RUNNING_STOPWATCH","TYPE_ADD_STOPPED_STOPWATCH","TYPE_DELETE","TYPE_LAP","TYPE_ENABLE_GLOBAL_SHORTCUTS","TYPE_DISABLE_GLOBAL_SHORTCUTS","INITIAL_STATE_RUNNING","INITIAL_STATE_STOPPED","newCard","id","initialState","initialCount","MyCards","useReducer","state","action","cards","card","currentFocusPos","nextState","nextCard","nextCardId","type","globalShortcutsEnabled","autoincrement","push","currentFocusId","filter","i","findIndex","length","oldCardPosition","otherCard","splice","previousCard","previousCardId","dispatch","useEffect","handleKeyDown","e","k","keyCode","document","addEventListener","removeEventListener","map","handlers","handleTriggerLap","handleDelete","enableGlobalShortcuts","disableGlobalShortcuts","data","hasFocus","cardNumber","addCard","MyCardCol","props","style","md","marginTop","marginBottom","AddCard","sm","color","fontSize","onClick","target","blur","ShortcutCard","Key","display","background","padding","children","DeleteButton","handleClick","float","MyCardBody","initialRunningState","start","Date","counter","accumulated","newState","isCounting","Error","shouldRestart","timeout","setTimeout","clearTimeout","toFixed","useTimer","count","formattedCount","toggleCounter","restartCounter","ref","useRef","tabIndex","zIndex","marginRight","Title","formDescription","placeholder","useState","value","setValue","onChange","useForm","isEditing","setIsEditing","current","focus","select","handleInputBlur","preventDefault","onSubmit","onFocus","onBlur","innerRef","tag","cursor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b7882896.chunk.js","sourcesContent":["\n/*\n *  BACKLOG\n *    When interacting with individual HTML components (input, form, etc) disable global shortcuts\n */\n\nimport { React, useEffect, useReducer, useState, useRef } from 'react';\nimport * as rs from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\n\nfunction App() {\n  return (\n    <>\n      <rs.Container>\n        <MyCards/>\n      </rs.Container>\n    </>\n  );\n}\n\nconst RESTART = \"RESTART\"\nconst INCREMENT = \"INCREMENT\"\nconst TOGGLE = \"TOGGLE\"\n\nconst useTimer = (initialRunningState, initialCount) => {\n\n  const [ state, dispatch ] = useReducer((state, action) => {\n    switch (action.type) {\n      case RESTART:\n        return {...state, start: (+new Date()), counter: 0, accumulated: 0}\n      case INCREMENT:\n        return {...state, counter: (+ new Date()) - state.start + state.accumulated}\n      case TOGGLE:\n        const newState = {...state, isCounting: !state.isCounting}\n        if (newState.isCounting) {\n          newState.accumulated = newState.counter\n          newState.start = (+ new Date())\n        }\n        return newState\n      default:\n        throw new Error()\n    }\n  }, {\n    isCounting: (initialRunningState === INITIAL_STATE_RUNNING) ? true : false,\n    shouldRestart: false,\n    start: (+ new Date()),\n    counter: 0,\n    accumulated: initialCount,\n  })\n\n  useEffect(() => {\n    if (!state.isCounting) {\n      return\n    }\n    const timeout = setTimeout(() => dispatch({ type: INCREMENT }), 10)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [state])\n\n  return [\n    state.counter,\n    (state.counter/1000).toFixed(2),\n    state.isCounting,\n    () => dispatch({ type: TOGGLE }),\n    () => dispatch({ type: RESTART })\n  ]\n}\n\nconst KEY_CODE_ARROW_RIGHT = 39\nconst KEY_CODE_ARROW_LEFT = 37\nconst KEY_CODE_ARROW_UP = 38\nconst KEY_CODE_ARROW_DOWN = 40\nconst KEY_CODE_SPACE = 32\nconst KEY_CODE_ENTER = 13\nconst KEY_CODE_A = 65\nconst KEY_CODE_L = 76\nconst KEY_CODE_DELETE = 46\n\nconst TYPE_FOCUS_RIGHT = \"TYPE_FOCUS_RIGHT\"\nconst TYPE_FOCUS_LEFT = \"TYPE_FOCUS_LEFT\"\nconst TYPE_ADD_RUNNING_STOPWATCH = \"TYPE_ADD_RUNNING_STOPWATCH\"\nconst TYPE_ADD_STOPPED_STOPWATCH = \"TYPE_ADD_STOPPED_STOPWATCH\"\nconst TYPE_DELETE = \"TYPE_DELETE\"\nconst TYPE_LAP = \"TYPE_LAP\"\nconst TYPE_ENABLE_GLOBAL_SHORTCUTS = \"TYPE_ENABLE_GLOBAL_SHORTCUTS\"\nconst TYPE_DISABLE_GLOBAL_SHORTCUTS = \"TYPE_DISABLE_GLOBAL_SHORTCUTS\"\n\nconst INITIAL_STATE_RUNNING = \"INITIAL_STATE_RUNNING\"\nconst INITIAL_STATE_STOPPED = \"INITIAL_STATE_STOPPED\"\n\nconst newCard = (id, initialState, initialCount) => {\n  return {\n    id: id,\n    initialState: initialState || INITIAL_STATE_RUNNING,\n    initialCount: initialCount || 0\n  }\n}\n\nconst MyCards = () => {\n\n  const [ state, dispatch ] = useReducer((state, action) => {\n    let cards = []\n    let card = {}\n    let currentFocusPos = 0\n    let nextState = {}\n    let nextCard = {}\n    let nextCardId = 0\n    switch (action.type) {\n      case TYPE_ENABLE_GLOBAL_SHORTCUTS:\n        return {...state, globalShortcutsEnabled: true}\n      case TYPE_DISABLE_GLOBAL_SHORTCUTS:\n        return {...state, globalShortcutsEnabled: false}\n      case TYPE_ADD_RUNNING_STOPWATCH:\n        cards = [...state.cards]\n        card = newCard(state.autoincrement + 1, INITIAL_STATE_RUNNING)\n        cards.push(card)\n        return {...state, autoincrement: state.autoincrement + 1, cards: cards, currentFocusId: card.id}\n      case TYPE_ADD_STOPPED_STOPWATCH:\n        cards = [...state.cards]\n        card = newCard(state.autoincrement + 1, INITIAL_STATE_STOPPED)\n        cards.push(card)\n        return {...state, autoincrement: state.autoincrement + 1, cards: cards, currentFocusId: card.id}\n      case TYPE_DELETE:\n        cards = [...state.cards]\n        cards = cards.filter(i => i.id !== action.id)\n        nextState = {...state, cards: cards}\n        if (action.id === state.currentFocusId) {\n          currentFocusPos = state.cards.findIndex(i => i.id === state.currentFocusId)\n          nextCard = state.cards[(currentFocusPos + 1) % state.cards.length]\n          if (currentFocusPos === state.cards.length - 1) {\n            // We are the last card, so move focus to the previous one\n            nextCard = state.cards[(currentFocusPos - 1 + state.cards.length) % state.cards.length]\n          }\n          nextCardId = (nextCard && nextCard.id) || 0\n          nextState.currentFocusId = nextCardId\n        }\n        return nextState\n      case TYPE_LAP:\n        cards = [...state.cards]\n        const oldCardPosition = state.cards.findIndex(i => i.id === state.currentFocusId)\n        const otherCard = newCard(state.autoincrement + 1, INITIAL_STATE_RUNNING, action.initialCount)\n        cards.splice(oldCardPosition + 1, 0, otherCard)\n        nextState = {...state, autoincrement: state.autoincrement + 1, cards, currentFocusId: otherCard.id}\n        return nextState\n      case TYPE_FOCUS_RIGHT:\n        currentFocusPos = state.cards.findIndex(i => i.id === state.currentFocusId)\n        nextCard = state.cards[(currentFocusPos + 1) % state.cards.length]\n        nextCardId = (nextCard && nextCard.id) || 0\n        return {...state, currentFocusId: nextCardId}\n      case TYPE_FOCUS_LEFT:\n        currentFocusPos = state.cards.findIndex(i => i.id === state.currentFocusId)\n        const previousCard = state.cards[(currentFocusPos - 1 + state.cards.length) % state.cards.length]\n        const previousCardId = (previousCard && previousCard.id) || 0\n        return {...state, currentFocusId: previousCardId}\n      default:\n        return state\n    }\n  }, {\n    cards: [\n      newCard(1, INITIAL_STATE_STOPPED)\n    ],\n    currentFocusId: 1,\n    autoincrement: 1,\n    globalShortcutsEnabled: true\n  })\n\n  useEffect(() => {\n    if (!state.globalShortcutsEnabled) {\n      return\n    }\n    const handleKeyDown = (e) => {\n      const k = e.keyCode\n      if (k === KEY_CODE_ARROW_RIGHT || k === KEY_CODE_ARROW_DOWN) dispatch({ type: TYPE_FOCUS_RIGHT })\n      if (k === KEY_CODE_ARROW_LEFT || k === KEY_CODE_ARROW_UP) dispatch({ type: TYPE_FOCUS_LEFT })\n      if (k === KEY_CODE_ENTER) dispatch({ type: TYPE_ADD_RUNNING_STOPWATCH })\n      if (k === KEY_CODE_A) dispatch({ type: TYPE_ADD_STOPPED_STOPWATCH })\n    }\n    document.addEventListener(\"keydown\", handleKeyDown, false)\n    return () => document.removeEventListener(\"keydown\", handleKeyDown, false)\n  }, [dispatch, state])\n\n  return (\n    <rs.Row>\n      {state.cards.map(i => {\n        const handleTriggerLap = (initialCount) => dispatch({type: TYPE_LAP, id: i.id, initialCount: initialCount})\n        const handleDelete = () => dispatch({type: TYPE_DELETE, id: i.id})\n        const enableGlobalShortcuts = () => dispatch({type: TYPE_ENABLE_GLOBAL_SHORTCUTS})\n        const disableGlobalShortcuts = () => dispatch({type: TYPE_DISABLE_GLOBAL_SHORTCUTS})\n        const handlers = {handleTriggerLap, handleDelete, enableGlobalShortcuts, disableGlobalShortcuts}\n        const data = {\n          ...i,\n          hasFocus: i.id === state.currentFocusId,\n          cardNumber: i.id,\n          globalShortcutsEnabled: state.globalShortcutsEnabled\n        }\n        return <MyCardCol key={i.id} data={data} handlers={handlers}/>\n      })}\n      <AddCard addCard={() => dispatch({type: TYPE_ADD_STOPPED_STOPWATCH})}/>\n      <ShortcutCard/>\n    </rs.Row>\n  )\n}\n\nconst MyCardCol = (props) => {\n  let style = {}\n\n  if (props.data.hasFocus) {\n    style[\"borderColor\"] = \"black\"\n  }\n\n  return (\n    <rs.Col md=\"4\" style={{marginTop: 10, marginBottom: 10}}>\n      <rs.Card style={style}>\n        <MyCardBody data={props.data} handlers={props.handlers}/>\n      </rs.Card>\n    </rs.Col>\n  )\n}\n\nconst AddCard = (props) => {\n  const handleClick = (e) => {\n    props.addCard();\n    e.target.blur()\n  }\n  return (\n    <rs.Col md=\"4\" sm=\"12\" style={{marginTop: 10, marginBottom: 10}}>\n      <rs.Button color=\"secondary\" style={{fontSize: \"200%\"}} onClick={handleClick}>+</rs.Button>\n    </rs.Col>\n  )\n}\n\nconst ShortcutCard = () => {\n  return (\n    <rs.Col md=\"4\" sm=\"12\" style={{marginTop: 10, marginBottom: 10}}>\n      <rs.Row><rs.Col><Key>ENTER</Key> Add a new running stopwatch with focus</rs.Col></rs.Row>\n      <rs.Row><rs.Col><Key>A</Key> Add a new stopped stopwatch with focus</rs.Col></rs.Row>\n      <rs.Row><rs.Col><Key>L</Key> Lap</rs.Col></rs.Row>\n      <rs.Row><rs.Col><Key>←</Key> or <Key>↑</Key> Focus left</rs.Col></rs.Row>\n      <rs.Row><rs.Col><Key>→</Key> or <Key>↓</Key> Focus right</rs.Col></rs.Row>\n      <rs.Row><rs.Col><Key>SPACE</Key> Toggle focused stopwatch</rs.Col></rs.Row>\n      <rs.Row><rs.Col><Key>DELETE</Key> Remove focused stopwatch</rs.Col></rs.Row>\n    </rs.Col>\n  )\n}\n\nconst Key = (props) => {\n  return (\n    <pre style={{display: \"inline\", background: \"#DDD\", marginTop: 5, padding: 3}}>{props.children}</pre>\n  )\n}\n\nconst useForm = (placeholder) => {\n  const [ value, setValue ] = useState(\"\")\n  return {\n    value: value,\n    onChange: (e) => setValue(e.target.value),\n    placeholder: placeholder\n  }\n}\n\nconst DeleteButton = (props) => {\n  return (\n    <rs.Button onClick={props.handleClick} color=\"danger\" style={{float: \"right\", fontSize: \"100%\"}}>x</rs.Button>\n  )\n}\n\nconst MyCardBody = (props) => {\n  const [ count, formattedCount, isCounting, toggleCounter, restartCounter ] = useTimer(props.data.initialState, props.data.initialCount)\n\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!props.data.globalShortcutsEnabled) return\n    if (!props.data.hasFocus) return\n    const handleKeyDown = (e) => {\n      const k = e.keyCode\n      if (k === KEY_CODE_SPACE) toggleCounter()\n      if (k === KEY_CODE_L) {\n        if (isCounting) {\n          toggleCounter()\n        }\n        props.handlers.handleTriggerLap(count)\n      }\n      if (e.keyCode === KEY_CODE_DELETE) props.handlers.handleDelete()\n    }\n    document.addEventListener(\"keydown\", handleKeyDown, false)\n    return () => document.removeEventListener(\"keydown\", handleKeyDown, false)\n  }, [isCounting, count, toggleCounter, props])\n\n\n  let style = {}\n\n  if (isCounting) {\n    style[\"background\"] = \"#e6ffeb\"\n  } else if (count !== 0) {\n    style[\"background\"] = \"#fffaeb\"\n  }\n\n  return (\n    <div ref={ref} tabIndex=\"0\">\n      <rs.CardBody style={style}>\n        <div style={{zIndex: 1}}>\n          <Title cardNumber={props.data.cardNumber} disableGlobalShortcuts={props.handlers.disableGlobalShortcuts} enableGlobalShortcuts={props.handlers.enableGlobalShortcuts}/>\n        </div>\n        <rs.CardText>Seconds ellapsed: {formattedCount}</rs.CardText>\n        <rs.Button color=\"primary\" style={{marginRight: 5}} onClick={toggleCounter}>{ isCounting ? \"Pause\" : (count === 0) ? \"Start\" : \"Continue\" }</rs.Button>\n        <DeleteButton handleClick={props.handlers.handleDelete}/>\n        { (count !== 0) ? <rs.Button color=\"danger\" style={{marginRight: 5, float: \"right\"}} onClick={restartCounter}>Reset</rs.Button> : \"\" }\n      </rs.CardBody>\n    </div>\n  )\n}\n\nconst Title = (props) => {\n  const formDescription = useForm(\"Enter a new title\")\n  const [ isEditing, setIsEditing ] = useState(false)\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if (isEditing) {\n      ref.current.focus()\n      ref.current.select()\n    }\n  }, [isEditing])\n\n  const handleTitleClick = (e) => {\n    setIsEditing(true)\n  }\n\n  const handleInputFocus = (e) => {\n    props.disableGlobalShortcuts()\n  }\n\n  const handleInputBlur = (e) => {\n    setIsEditing(false)\n    props.enableGlobalShortcuts()\n    e.preventDefault()\n  }\n\n  return (\n    <>\n      <form onSubmit={handleInputBlur}>\n        { isEditing ? (\n          <rs.Input {...formDescription} onFocus={handleInputFocus} onBlur={handleInputBlur} innerRef={ref} style={{marginBottom: 5}}/>\n        ) : (\n          <rs.CardTitle tag=\"h5\" onClick={handleTitleClick} style={{cursor: \"pointer\"}}>\n           { formDescription.value || \"Stopwatch \" + props.cardNumber }\n          </rs.CardTitle>\n        )}\n      </form>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}